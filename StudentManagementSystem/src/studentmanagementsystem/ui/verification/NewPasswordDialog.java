/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package studentmanagementsystem.ui.verification;

import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.awt.Rectangle;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import studentmanagementsystem.service.Services;
import studentmanagementsystem.ui.Login.AdminLogin;
import studentmanagementsystem.ui.Login.StudentLogin;
import studentmanagementsystem.ui.admin.HomePage;
import studentmanagementsystem.ui.forms.AdminRegistrationForm;
import studentmanagementsystem.ui.forms.StudentRegistrationForm;
import studentmanagementsystem.utility.EmailSender;
import studentmanagementsystem.utility.Util;

/**
 *
 * @author Abhishek Rajput
 */
public class NewPasswordDialog extends javax.swing.JDialog {

    private Object obj;
    private String email;
    private String name;
    private NewPasswordDialog npd;
    private EmailSender emailSender = new EmailSender();

    /**
     * Creates new form newPassword
     *
     * @param obj
     * @param email
     */
    public NewPasswordDialog(Object obj, String email, String name) {
        if (npd != null) {
            dispose();
        }
        this.obj = obj;
        this.name = name;
        this.email = email;
        initComponents();
        setLocationRelativeTo(null);
        if (obj instanceof StudentRegistrationForm object) {
            setLocationRelativeTo(object);
        } else if (obj instanceof AdminRegistrationForm object) {
            setLocationRelativeTo(object);
        } else if (obj instanceof AdminLogin object) {
            setLocationRelativeTo(object);
        } else if (obj instanceof StudentLogin object) {
            setLocationRelativeTo(object);
        }
   
    }

    public NewPasswordDialog() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        updateButton = new javax.swing.JButton();
        pass1 = new javax.swing.JPasswordField();
        pass2 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Exit = new javax.swing.JButton();
        pass1Label = new javax.swing.JLabel();
        pass2Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Password");

        jPanel1.setToolTipText("    Must be at least 8 characters long\n    Include at least one uppercase letter (A-Z)\n    Include at least one lowercase letter (a-z)\n    Include at least one number (0-9)\n    Include at least one special character (e.g., !@#$%^&*)\n");
        jPanel1.setOpaque(false);

        updateButton.setText("Update");
        updateButton.setToolTipText("");
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updateButton.setEnabled(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        pass1.setToolTipText("    Must be at least 8 characters long\n    Include at least one uppercase letter (A-Z)\n    Include at least one lowercase letter (a-z)\n    Include at least one number (0-9)\n    Include at least one special character (e.g., !@#$%^&*)\n");
        pass1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                pass1InputMethodTextChanged(evt);
            }
        });
        pass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pass1ActionPerformed(evt);
            }
        });
        pass1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pass1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pass1KeyTyped(evt);
            }
        });

        pass2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pass2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pass2KeyTyped(evt);
            }
        });

        jLabel1.setText("New password");

        jLabel2.setText("Re-Type same password");

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(pass1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pass1Label, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(pass2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pass2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(updateButton)
                        .addGap(27, 27, 27)
                        .addComponent(Exit)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pass1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pass2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(Exit))
                .addGap(62, 62, 62))
        );

        updateButton.setBackground(Color.GREEN);
        Exit.setBackground(Color.RED);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // update  password
        if(!pass1.getText().equals(pass2.getText())) JOptionPane.showMessageDialog(rootPane, "Both password not matched");
        if (!pass1Label.getText().equals("✅") && pass2Label.getText().equals("✅")) {
            JOptionPane.showMessageDialog(rootPane, "plese make sure all field  ✅");
            return;
        }

        if (obj instanceof StudentRegistrationForm ob) {
            try {
                if (ob.addStudent(pass1.getText())) {
     
                    dispose();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "failed retry");
            }
        } else if (obj instanceof AdminLogin) {

            try {
                if (Services.getService().updateAdminPassword(email, pass1.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "success");

                    dispose();

                } else {
                    JOptionPane.showMessageDialog(rootPane, "failed retry");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
                Logger.getLogger(NewPasswordDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (obj instanceof StudentLogin) {
            try {
                if (Services.getService().updateStudentPassword(email, pass1.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "success");
                    dispose();

                } else {
                    JOptionPane.showMessageDialog(rootPane, "failed retry");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);

                Logger.getLogger(NewPasswordDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (obj instanceof AdminRegistrationForm o) {
            if (o.addAdmin(pass1.getText())) {
                JOptionPane.showMessageDialog(rootPane, "success");
                int id = Services.getService().getAdminId(email);
                emailSender.sendRegistrationSuccessMail(email, this.name, id);
                dispose();

            } else {
                JOptionPane.showMessageDialog(rootPane, "failed retry");
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void pass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pass1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pass1ActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_ExitActionPerformed

    private void pass1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pass1KeyTyped
        // TODO add your handling code here:
        Util.isPassValid(pass1, pass1Label, evt);

    }//GEN-LAST:event_pass1KeyTyped

    private void pass2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pass2KeyTyped
        if (Util.isPassMatched(pass1, pass2, pass2Label, evt))
            updateButton.setEnabled(true);
        else updateButton.setEnabled(false);
    }//GEN-LAST:event_pass2KeyTyped

    private void pass1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_pass1InputMethodTextChanged
        // TODO add your handling code here:
        int len1 = pass1.getText().length();
        if (len1 > 16) {
            evt.consume();
        }
    }//GEN-LAST:event_pass1InputMethodTextChanged

    private void pass1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pass1KeyReleased
        Util.isPassValid(pass1, pass1Label, evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_pass1KeyReleased

    private void pass2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pass2KeyReleased
        if (Util.isPassMatched(pass1, pass2, pass2Label, evt)) {
            updateButton.setEnabled(true);
        }      else updateButton.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_pass2KeyReleased
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new NewPasswordDialog().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField pass1;
    private javax.swing.JLabel pass1Label;
    private javax.swing.JPasswordField pass2;
    private javax.swing.JLabel pass2Label;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

}
