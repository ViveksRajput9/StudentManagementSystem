/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package studentmanagementsystem.ui.admin;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import studentmanagementsystem.model.Student;
import studentmanagementsystem.service.Services;
import studentmanagementsystem.ui.UiController;
import studentmanagementsystem.utility.EmailSender;

/**
 *
 * @author Abhishek Rajput
 */
public class StudentDetail extends javax.swing.JFrame {

    private EmailSender emailSender = new EmailSender();

    private Student std;

    /**
     * Creates new form StudentDetails
     */
    public StudentDetail() {
        initComponents();
        setLocationRelativeTo(null);
        ArrayList<String> batchNames = Services.getService().getBatchesName();

        try {
            batchNames.forEach(batchName -> batch.addItem(batchName));
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    public void showDetail(Student student) {
        std = student;
        id.setText(String.valueOf(student.getId()));
        studentName.setText(student.getStudentName());
        gender.setText(student.getGender());
        collegeCourse.setText(student.getCollegeCourse());
        collegeYear.setText(String.valueOf(student.getCollegeYear()));
        DateOfBirth.setText(student.getDateOfBirth().toString());
        studentMobileNo.setText(student.getStudentMobileNo());
        studentAadhaarNo.setText(student.getStudentAadhaarNo());
        email.setText(student.getEmail());
        fatherName.setText(student.getFatherName());
        fatherOccupation.setText(student.getFatherOccupation());
        fatherIncome.setText(String.valueOf(student.getFatherIncome()));
        fatherAadhaarNo.setText(student.getFatherAadhaarNo());
        fatherMobileNo.setText(student.getFatherMobileNo());
        motherName.setText(student.getMotherName());
        motherOccupation.setText(student.getMotherOccupation());
        state.setText(student.getState());
        city.setText(student.getCity());
        permanentAddress.setText(student.getAddress());
        localAddress.setText(student.getLocalAddress());
        status.setSelectedItem(student.getStatus());
        total_leaves.setText(String.valueOf(student.getTotalLeave()));
        batch.setSelectedItem(student.getBatch() == null ? "Not Selected" : student.getBatch());
    }

//    private Student getStudentDetail() {
//        // Retrieve values from UI components and create a Student object
//        return new Student(
//                Integer.parseInt(id.getText()), // Assuming there's an `id` field in your UI
//                batch.getSelectedItem().toString(), // Batch from JComboBox
//                (String) status.getSelectedItem(), // Status from JComboBox
//                Integer.parseInt(total_leaves.getText()), // Total leaves from JTextField
//                studentName.getText(), // Student Name
//                Date.valueOf(DateOfBirth.getText()), // Convert date text to Date
//                (String) gender.getText(), // Gender from JComboBox
//                email.getText(), // Email
//                (String) collegeCourse.getText(), // College course
//                Integer.parseInt(collegeYear.getText().toString()), // College year
//                studentMobileNo.getText(), // Student mobile number
//                localAddress.getText(), // Local address
//                fatherName.getText(), // Father's Name
//                fatherAadhaarNo.getText(), // Father's Aadhaar No
//                fatherOccupation.getText(), // Father's Occupation
//                Double.parseDouble(fatherIncome.getText()), // Father's Income
//                fatherMobileNo.getText(), // Father's Mobile No
//                motherName.getText(), // Mother's Name
//                motherOccupation.getText(), // Mother's Occupation
//                (String) state.getText(), // State from JComboBox
//                city.getText(), // City
//                permanentAddress.getText(), // Address (previously permanentAddress)
//                studentAadhaarNo.getText() // Student's Aadhaar No
//        );
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        studentName = new javax.swing.JTextField();
        studentMobileNo = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        studentAadhaarNo = new javax.swing.JTextField();
        DateOfBirth = new javax.swing.JTextField();
        gender = new javax.swing.JLabel();
        collegeCourse = new javax.swing.JLabel();
        collegeYear = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        fatherName = new javax.swing.JTextField();
        fatherOccupation = new javax.swing.JTextField();
        fatherIncome = new javax.swing.JTextField();
        fatherAadhaarNo = new javax.swing.JTextField();
        fatherMobileNo = new javax.swing.JTextField();
        motherName = new javax.swing.JTextField();
        motherOccupation = new javax.swing.JTextField();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        city = new javax.swing.JTextField();
        permanentAddress = new javax.swing.JTextField();
        localAddress = new javax.swing.JTextField();
        total_leaves = new javax.swing.JTextField();
        status = new javax.swing.JComboBox<>();
        batch = new javax.swing.JComboBox<>();
        state = new javax.swing.JLabel();
        updateChanges = new javax.swing.JButton();
        id = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("StudentDetaills");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "StudentDetail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel1.setToolTipText("");

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        studentName.setEditable(false);
        studentName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        studentName.setBorder(javax.swing.BorderFactory.createTitledBorder("Name"));
        studentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameActionPerformed(evt);
            }
        });

        studentMobileNo.setEditable(false);
        studentMobileNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        studentMobileNo.setBorder(javax.swing.BorderFactory.createTitledBorder("MobileNumber"));
        studentMobileNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                studentMobileNoKeyTyped(evt);
            }
        });

        email.setEditable(false);
        email.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        email.setBorder(javax.swing.BorderFactory.createTitledBorder("Email"));
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        studentAadhaarNo.setEditable(false);
        studentAadhaarNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        studentAadhaarNo.setBorder(javax.swing.BorderFactory.createTitledBorder("Aadhaar Number"));
        studentAadhaarNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentAadhaarNoActionPerformed(evt);
            }
        });
        studentAadhaarNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                studentAadhaarNoKeyTyped(evt);
            }
        });

        DateOfBirth.setEditable(false);
        DateOfBirth.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        DateOfBirth.setBorder(javax.swing.BorderFactory.createTitledBorder("DateOfBirth"));

        gender.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        gender.setBorder(javax.swing.BorderFactory.createTitledBorder("Gender"));

        collegeCourse.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        collegeCourse.setBorder(javax.swing.BorderFactory.createTitledBorder("College"));

        collegeYear.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        collegeYear.setBorder(javax.swing.BorderFactory.createTitledBorder("Year"));

        jLayeredPane1.setLayer(studentName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(studentMobileNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(email, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(studentAadhaarNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(DateOfBirth, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(gender, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(collegeCourse, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(collegeYear, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(studentAadhaarNo)
                    .addComponent(studentMobileNo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(studentName)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(collegeCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(collegeYear, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DateOfBirth, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(email)
                    .addComponent(gender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(collegeYear, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(collegeCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DateOfBirth)
                .addGap(18, 18, 18)
                .addComponent(studentMobileNo)
                .addGap(18, 18, 18)
                .addComponent(studentAadhaarNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
        );

        fatherName.setEditable(false);
        fatherName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fatherName.setBorder(javax.swing.BorderFactory.createTitledBorder("Father Name"));

        fatherOccupation.setEditable(false);
        fatherOccupation.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fatherOccupation.setBorder(javax.swing.BorderFactory.createTitledBorder("Occupation"));

        fatherIncome.setEditable(false);
        fatherIncome.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fatherIncome.setBorder(javax.swing.BorderFactory.createTitledBorder("Father Income"));
        fatherIncome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fatherIncomeKeyTyped(evt);
            }
        });

        fatherAadhaarNo.setEditable(false);
        fatherAadhaarNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fatherAadhaarNo.setBorder(javax.swing.BorderFactory.createTitledBorder("FatherAadhaarNo"));
        fatherAadhaarNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fatherAadhaarNoKeyTyped(evt);
            }
        });

        fatherMobileNo.setEditable(false);
        fatherMobileNo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        fatherMobileNo.setBorder(javax.swing.BorderFactory.createTitledBorder("MobileNumber"));
        fatherMobileNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fatherMobileNoActionPerformed(evt);
            }
        });

        motherName.setEditable(false);
        motherName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        motherName.setBorder(javax.swing.BorderFactory.createTitledBorder("Mother Name"));
        motherName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motherNameActionPerformed(evt);
            }
        });

        motherOccupation.setEditable(false);
        motherOccupation.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        motherOccupation.setBorder(javax.swing.BorderFactory.createTitledBorder("Occupation"));

        jLayeredPane2.setLayer(fatherName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(fatherOccupation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(fatherIncome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(fatherAadhaarNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(fatherMobileNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(motherName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(motherOccupation, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fatherName, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                    .addComponent(fatherOccupation)
                    .addComponent(fatherIncome)
                    .addComponent(fatherAadhaarNo)
                    .addComponent(fatherMobileNo)
                    .addComponent(motherName)
                    .addComponent(motherOccupation)))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fatherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fatherOccupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fatherIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fatherAadhaarNo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fatherMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(motherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(motherOccupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        city.setEditable(false);
        city.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        city.setBorder(javax.swing.BorderFactory.createTitledBorder("City"));
        city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityActionPerformed(evt);
            }
        });

        permanentAddress.setEditable(false);
        permanentAddress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        permanentAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("Address"));
        permanentAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                permanentAddressActionPerformed(evt);
            }
        });

        localAddress.setEditable(false);
        localAddress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        localAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("LocalAddress"));

        total_leaves.setEditable(false);
        total_leaves.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        total_leaves.setBorder(javax.swing.BorderFactory.createTitledBorder("Total_leaves"));
        total_leaves.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                total_leavesKeyTyped(evt);
            }
        });

        status.setEditable(true);
        status.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Complete", "Disqualified", "InProgress" }));
        status.setToolTipText("");
        status.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        batch.setEditable(true);
        batch.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        batch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not selected" }));
        batch.setToolTipText("");
        batch.setBorder(javax.swing.BorderFactory.createTitledBorder("Batch"));
        batch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batchActionPerformed(evt);
            }
        });

        state.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        state.setBorder(javax.swing.BorderFactory.createTitledBorder("State"));

        jLayeredPane3.setLayer(city, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(permanentAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(localAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(total_leaves, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(status, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(batch, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(state, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(permanentAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                                    .addComponent(localAddress)
                                    .addComponent(city)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(total_leaves)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(batch, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(status, 0, 245, Short.MAX_VALUE)
                            .addComponent(state, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(permanentAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(localAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(total_leaves, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(batch, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
        );

        updateChanges.setText("UpdateChanges");
        updateChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateChangesActionPerformed(evt);
            }
        });

        id.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        id.setBorder(javax.swing.BorderFactory.createTitledBorder("Id"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLayeredPane2)
                        .addGap(32, 32, 32)
                        .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(updateChanges)
                        .addGap(57, 57, 57)
                        .addComponent(back)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateChanges)
                            .addComponent(back))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:

        UiController.getHome().setVisible(true);
        dispose();
    }//GEN-LAST:event_backActionPerformed

    private void studentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentNameActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void studentAadhaarNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentAadhaarNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentAadhaarNoActionPerformed

    private void fatherMobileNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fatherMobileNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fatherMobileNoActionPerformed

    private void motherNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motherNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_motherNameActionPerformed

    private void permanentAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_permanentAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_permanentAddressActionPerformed

    private void cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityActionPerformed

    private void updateChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateChangesActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String message = "Do you want to proceed with the operation?";
        // Show a confirmation dialog
        int response = JOptionPane.showConfirmDialog(null, message, "Confirmation", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == response) {
            updateStudent();
        }
    }//GEN-LAST:event_updateChangesActionPerformed

    private void fatherIncomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fatherIncomeKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c))
            evt.consume();
    }//GEN-LAST:event_fatherIncomeKeyTyped

    private void studentMobileNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studentMobileNoKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c))
            evt.consume();
    }//GEN-LAST:event_studentMobileNoKeyTyped

    private void studentAadhaarNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studentAadhaarNoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c))
            evt.consume();
    }//GEN-LAST:event_studentAadhaarNoKeyTyped

    private void fatherAadhaarNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fatherAadhaarNoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c))
            evt.consume();
    }//GEN-LAST:event_fatherAadhaarNoKeyTyped

    private void total_leavesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_total_leavesKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c))
            evt.consume();
    }//GEN-LAST:event_total_leavesKeyTyped

    private void batchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_batchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new StudentDetail().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DateOfBirth;
    private javax.swing.JButton back;
    private javax.swing.JComboBox<String> batch;
    private javax.swing.JTextField city;
    private javax.swing.JLabel collegeCourse;
    private javax.swing.JLabel collegeYear;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fatherAadhaarNo;
    private javax.swing.JTextField fatherIncome;
    private javax.swing.JTextField fatherMobileNo;
    private javax.swing.JTextField fatherName;
    private javax.swing.JTextField fatherOccupation;
    private javax.swing.JLabel gender;
    private javax.swing.JLabel id;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField localAddress;
    private javax.swing.JTextField motherName;
    private javax.swing.JTextField motherOccupation;
    private javax.swing.JTextField permanentAddress;
    private javax.swing.JLabel state;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTextField studentAadhaarNo;
    private javax.swing.JTextField studentMobileNo;
    private javax.swing.JTextField studentName;
    private javax.swing.JTextField total_leaves;
    private javax.swing.JButton updateChanges;
    // End of variables declaration//GEN-END:variables
 private void updateStudent() {
        boolean flag = false;

        boolean batchFlag = batch.getSelectedItem().toString().equalsIgnoreCase("Not selected");
        boolean statusFlag = status.getSelectedItem().toString().equalsIgnoreCase(std.getStatus());
        int localid = Integer.parseInt(id.getText());
        String batchString = batch.getSelectedItem().toString();
        String statusString = status.getSelectedItem().toString();

        if (batchFlag && statusFlag) {
            JOptionPane.showMessageDialog(rootPane, "please make changes for update");
        } else if (!batchFlag && statusString.equalsIgnoreCase("Active")) //check if batch selected then  update batch if status active
        {
            if (Services.getService().updateStudentBatch(localid, batchString)) {
                emailSender.sendStatusEmail(this.email.getText(), this.studentName.getText(), batchString);
                flag = true;
            }

        } else if (!statusFlag && !statusString.equalsIgnoreCase("Inprogress")) //  update only when current status changed then  update status  only active disqulified completed
        {

            if (Services.getService().updateStudentStatus(localid, statusString)) {
                emailSender.sendStatusEmail(this.email.getText(), this.studentName.getText(), statusString);

                flag = true;
            }
        } else if (!(batchFlag && statusFlag && statusString.equalsIgnoreCase("Inprogress"))) {// if status not inprogress and batch  selected then update both 
            if (Services.getService().updateStudent(localid, statusString, batchString)) {
                emailSender.sendStatusEmail(this.email.getText(), this.studentName.getText(), statusString);

                flag = true;
            }
        }
        if (flag) {
            JOptionPane.showMessageDialog(null, "Student Updated successfully");
        } else {
            JOptionPane.showMessageDialog(null, "Student Not Update");
        }
    }
}